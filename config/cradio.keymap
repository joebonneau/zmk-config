/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    // flavor = "tap-preferred";
    // tapping-term-ms = <150>;
};

&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        shm: sensitive_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_shft_caps_word {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&kp Q             &kp W            &kp E               &kp R             &kp T           &kp Y            &kp U              &kp I                &kp O             &kp P
&shm LEFT_META A  &shm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G           &kp H            &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &shm RIGHT_ALT L  &shm RIGHT_META SEMICOLON
&kp Z             &kp X            &kp C               &kp V             &kp B           &kp N            &kp M              &kp COMMA            &kp DOT           &kp FSLH
                                                     &lt 1 SPACE       &lt 4 ESCAPE    &lt 3 BACKSPACE  &lt 2 ENTER
            >;
        };

        nav {
            bindings = <
&none     &none     &none      &none      &none     &none           &none           &none         &none            &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp SINGLE_QUOTE
&none     &none     &none      &none      &none     &none           &none           &none         &none            &none
                               &trans     &trans    &trans          &trans
            >;
        };

        num {
            bindings = <
&trans     &kp N7  &kp N8  &kp N9  &trans       &trans    &trans     &trans     &trans    &trans
&kp TAB    &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans    &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &trans    &trans     &trans     &trans    &trans
                           &kp N0  &kp MINUS    &kp BSPC  &kp ENTER
            >;
        };

        sym {
            bindings = <
&none      &kp AMPS  &kp STAR   &none      &none        &none   &none      &none      &none     &none
&kp TAB    &kp DLLR  &kp PRCNT  &kp N6     &kp PLUS     &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp TILDE  &kp EXCL  &kp AT     &kp POUND  &kp PIPE     &none   &none      &none      &none     &none
                                &trans     &kp UNDER    &trans  &trans
            >;
        };

        brackets {
            bindings = <
&trans  &trans            &trans          &trans                &trans    &trans  &trans                 &trans           &trans             &trans
&trans  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES
&trans  &trans            &trans          &trans                &trans    &trans  &trans                 &trans           &trans             &trans
                                          &trans                &trans    &trans  &trans
            >;
        };
    };
};
